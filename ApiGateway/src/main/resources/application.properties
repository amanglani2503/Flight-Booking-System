# API Gateway basic setup
spring.application.name=api-gateway
server.port=8080

# Eureka service discovery configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
spring.cloud.discovery.enabled=true
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# JWT secret key for authentication
jwt.secret=TXlTdXBlclNlY3JldEtleUZvckpXVE15U3VwZXJTZWNyZXRLZXlGb3JKV1Q=

# Gateway route definitions for microservices
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**,/user/**

spring.cloud.gateway.routes[1].id=flight-service
spring.cloud.gateway.routes[1].uri=lb://FLIGHT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/flights/**

spring.cloud.gateway.routes[2].id=booking-service
spring.cloud.gateway.routes[2].uri=lb://BOOKING-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/bookings/**

spring.cloud.gateway.routes[3].id=messaging-service
spring.cloud.gateway.routes[3].uri=lb://MESSAGING-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/message/**

spring.cloud.gateway.routes[4].id=payment-service
spring.cloud.gateway.routes[4].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/checkout/**

# Apply global JWT authentication filter
spring.cloud.gateway.default-filters[0]=AuthenticationFilter